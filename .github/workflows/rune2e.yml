name: Run e2e

on:
  workflow_call:
    inputs:
        scriptName:
          description: 'Name of the script to run'
          required: true
          default: 'test-github'
          type: string

        parallel:
          description: "run parallel"
          type: boolean
          required: true
          default: false
                    
        dockerImage:
          description: 'identifier of docker image on dockerhub'
          required: true
          type: string
          default: 'mangatasolutions/mangata-node:develop'

        e2eBranch:
          type: string
          description: 'Name of the e2e target branch'
          required: false
          default: 'main'

  workflow_dispatch:
      inputs:
        scriptName:
          description: 'Name of the script to run'
          required: true
          default: 'test-github'

        parallel:
          description: "run parallel"
          type: boolean
          required: true
          default: false

        group:
          description: "group of the tests"
          type: choice
          required: false
          default: 'none'
          options:
            - none
            - sequential
            - bootstrap
            - rewards-bootstrap
            - seqgasless
            - paralgasless
            - parallel
            - xyk
            - api
            - sdk
            - ci
            - ui
            - story
            - gassless
            - test-sequential-e2e
            - test-sequential-no-bootstrap
            - upgradeRuntime
            - story
            - autocompound

        dockerImage:
          description: 'identifier of docker image on dockerhub'
          required: true
          default: 'mangatasolutions/mangata-node:develop'

        e2eBranch:
          description: 'Name of the e2e target branch'
          required: false
          default: 'main'
      

jobs:
  test:
    name: Test code quality and run tests
    runs-on: ubuntu-latest
    env:
      API_URL: 'ws://127.0.0.1:9946'
      E2E_PARAMS : '--runInBand'
      E2E_GROUPS : ''
      TEST_PALLET_ADDRESS: ${{ secrets.TEST_PALLET_ADDRESS }}
      E2E_XYK_PALLET_ADDRESS: ${{ secrets.E2E_XYK_PALLET_ADDRESS }}
      E2E_TREASURY_PALLET_ADDRESS: ${{ secrets.E2E_TREASURY_PALLET_ADDRESS }}
      E2E_TREASURY_BURN_PALLET_ADDRESS : ${{ secrets.E2E_TREASURY_BURN_PALLET_ADDRESS }}
      TEST_SUDO_NAME: ${{ secrets.TEST_SUDO_NAME }}
    outputs:
      testmo-run-id: ${{ steps.setTestRun.outputs.testmo-run-id }}


    steps:

      - name: Checkout tests
        uses: actions/checkout@v2
        with:
          repository: mangata-finance/mangata-e2e
          ref: '${{ github.event.inputs.e2eBranch || inputs.e2eBranch }}'
          path: 'e2eTests'
  
      - name: Checkout mangata-node
        uses: actions/checkout@v2
        with:
          repository: mangata-finance/mangata-node
          ref: 'develop'
          path: 'mangata-node'

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn
          path: 'e2eTests'
          cache-dependency-path: e2eTests/yarn.lock

      - name: Replace parachain docker image reference in config
        working-directory: mangata-node/devops/parachain-launch
        run: sed -i 's+mangatasolutions/mangata-node:.*+${{ github.event.inputs.dockerImage || inputs.dockerImage }}+g' config.yml
      
      - name: Generate the config
        working-directory: mangata-node/devops/parachain-launch
        run: npx @open-web3/parachain-launch generate config.yml

      - name: Stop previous parachain if running
        working-directory: mangata-node/devops/parachain-launch/output
        run: docker-compose down -v

      - name: Start mangata-node parachain
        working-directory: mangata-node/devops/parachain-launch/output
        run: docker-compose up -d --build

      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: yarn
          path: 'e2eTests'
          cache-dependency-path: e2eTests/yarn.lock

      - name: Install dependencies for tests
        working-directory: e2eTests
        run: yarn --network-concurrency=1

      - name: Install testmo
        working-directory: e2eTests
        run: npm i -g @testmo/testmo-cli

      - name: Tsc code quality check
        working-directory: e2eTests
        run: yarn tsc-lint --skipLibCheck

      - name: ESLint code quality check
        working-directory: e2eTests
        run: yarn eslint

      - name: Docker ps
        run: docker ps

      - name: Sleep for 2 minutes
        run: sleep 120s

      - name: Generate test run flags
        if: ${{ github.event.inputs.parallel != 'false' }}
        run:
          echo "E2E_PARAMS=--max-workers=32" >> $GITHUB_ENV

      - name: Generate test run flags - groups
        if: ${{ github.event.inputs.group != '' && github.event.inputs.group != 'none' }}
        run:
          echo "E2E_GROUPS=--group=${{ github.event.inputs.group}}" >> $GITHUB_ENV
      
      # Optionally add a couple of fields such as the git hash and link to the build
      - name: Add extra params
        working-directory: e2eTests
        run: |
          npx testmo automation:resources:add-field --name git --type string \
            --value ${GITHUB_SHA:0:7} --resources resources.json
          RUN_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          npx testmo automation:resources:add-link --name build \
            --url $RUN_URL --resources resources.json

      - name: Create test run
        working-directory: e2eTests
        run: |
          npx testmo automation:run:create \
            --instance https://mangata-finance.testmo.net  \
            --project-id 2 \
            --name "e2e test run" \
            --resources resources.json \
            --source "unit-tests" > testmo-run-id.txt
          ID=$(cat testmo-run-id.txt)
          echo "testmo-run-id=$ID" >> $GITHUB_OUTPUT
          echo "ID=$ID" >> $GITHUB_ENV
          
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
        id: setTestRun
      
      - name: Run e2e tests
        working-directory: e2eTests
        run: yarn ${{ github.event.inputs.scriptName || inputs.scriptName }} ${{env.E2E_PARAMS}} ${{env.E2E_GROUPS}}
        
      - name: Submit results to the testmo-run
        if: always()
        working-directory: e2eTests 
        run: |
            npx testmo automation:run:submit-thread \
              --instance https://mangata-finance.testmo.net \
              --run-id $(cat testmo-run-id.txt) \
              --results reports/*.xml 
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
                      
  test-complete:
    needs: [test]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: npm
      - name: Install testmo
        run: npm i -g @testmo/testmo-cli
        
      - name: Complete test run
        run: |
            npx testmo automation:run:complete \
              --instance https://mangata-finance.testmo.net \
              --run-id ${{needs.test.outputs.testmo-run-id}} \
        env:
          TESTMO_URL: ${{ secrets.TESTMO_URL }}
          TESTMO_TOKEN: ${{ secrets.TESTMO_TOKEN }}
        
        
