{
  "uid" : "4b4757e66a1912dae1a509f688f20b0f",
  "children" : [ {
    "name" : "Product defects",
    "children" : [ {
      "name" : "Error: expect(received).toBeTruthy()\n                \n                Received: false",
      "children" : [ {
        "name" : "As a User I can mint some tokens MGA - mETH",
        "uid" : "5c8f0095b97b168d",
        "parentUid" : "ffcd8928d6543ed53c85f4784defae24",
        "status" : "failed",
        "time" : {
          "start" : 1636992830344,
          "stop" : 1636993183881,
          "duration" : 353537
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "As a User I can mint in more than one pool [ MGA - mETH ] [ MGA - newTokn ] and get invested values",
        "uid" : "7c1d99f41378ebc8",
        "parentUid" : "ffcd8928d6543ed53c85f4784defae24",
        "status" : "failed",
        "time" : {
          "start" : 1636993471545,
          "stop" : 1636993710103,
          "duration" : 238558
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      }, {
        "name" : "As a User I can create a pool",
        "uid" : "98bb4d67009c1e0d",
        "parentUid" : "ffcd8928d6543ed53c85f4784defae24",
        "status" : "failed",
        "time" : {
          "start" : 1636997587934,
          "stop" : 1636997850551,
          "duration" : 262617
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "ffcd8928d6543ed53c85f4784defae24"
    }, {
      "name" : "Error: expect(received).toBeFalsy()\n                \n                Received: true",
      "children" : [ {
        "name" : "As a User I can burn all liquidity MGA - mETH",
        "uid" : "93dffd28ba59215e",
        "parentUid" : "b983cd53ac27a8c48594af2e3196a36d",
        "status" : "failed",
        "time" : {
          "start" : 1636993183881,
          "stop" : 1636993471545,
          "duration" : 287664
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "b983cd53ac27a8c48594af2e3196a36d"
    }, {
      "name" : "Error: Timeout - Async callback was not invoked within the 300000 ms timeout specified by jest.setTimeout.",
      "children" : [ {
        "name" : "As a User I can Withdraw ETH from Meta extension",
        "uid" : "f0f33be8c8c4dbc9",
        "parentUid" : "f66f4947f88d0ce9c6a938c68bc699c1",
        "status" : "failed",
        "time" : {
          "start" : 1636994229947,
          "stop" : 1636994558222,
          "duration" : 328275
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "f66f4947f88d0ce9c6a938c68bc699c1"
    }, {
      "name" : "Error: Trade btn is not enabled!",
      "children" : [ {
        "name" : "As a User I can Swap All MGA tokens -> newToken",
        "uid" : "e7f56bc2a794b807",
        "parentUid" : "ef1c87a10cfcc23c8a9c5471f2db012a",
        "status" : "failed",
        "time" : {
          "start" : 1636994560466,
          "stop" : 1636994867853,
          "duration" : 307387
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "ef1c87a10cfcc23c8a9c5471f2db012a"
    }, {
      "name" : "Error: Provide btn is not enabled!",
      "children" : [ {
        "name" : "As a User I can mint All tokens newToken - newToken2",
        "uid" : "9a8023e0eed5cbde",
        "parentUid" : "89d88dbfdb1a9ca9f14266fdb5c6f4ea",
        "status" : "failed",
        "time" : {
          "start" : 1636994867853,
          "stop" : 1636995239954,
          "duration" : 372101
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "89d88dbfdb1a9ca9f14266fdb5c6f4ea"
    }, {
      "name" : "TimeoutError: Waiting for element to be located By(xpath, //*[@data-testid='poolsOverview-item-m1099-m1098'])\n                Wait timed out after 31213ms",
      "children" : [ {
        "name" : "As a User I get the right values for Pool removal P[2499999999999999999, 5000000000000000000] - I-> 2 -Expected - 0.049 , 0.100",
        "uid" : "63d4ed69d69f95d7",
        "parentUid" : "7907df1ce6d7de96436a2becac843f10",
        "status" : "failed",
        "time" : {
          "start" : 1636996249532,
          "stop" : 1636996404891,
          "duration" : 155359
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "7907df1ce6d7de96436a2becac843f10"
    }, {
      "name" : "TimeoutError: Waiting for element to be located By(xpath, //*[@data-testid='poolsOverview-item-m1102-m1101'])\n                Wait timed out after 31828ms",
      "children" : [ {
        "name" : "As a User I get the right values for Pool removal P[2500000000000000000, 5000000000000000000] - I-> 1 -Expected - 0.025 , 0.05",
        "uid" : "63764a1b0d77f9e6",
        "parentUid" : "750ee08d5b051d213551cc78e522ccc2",
        "status" : "failed",
        "time" : {
          "start" : 1636996404891,
          "stop" : 1636996556109,
          "duration" : 151218
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "750ee08d5b051d213551cc78e522ccc2"
    }, {
      "name" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                Expected: NaN\n                Received: 0.000002",
      "children" : [ {
        "name" : "As a User I get the right values for Pool investment P[5000000000000000000, 100] - I-> 100000000000 -Expected - 0.000002",
        "uid" : "8d24c0b9fb7e8249",
        "parentUid" : "43c47b8567647f5dbda80602c288ac6e",
        "status" : "failed",
        "time" : {
          "start" : 1636996658204,
          "stop" : 1636996937400,
          "duration" : 279196
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "43c47b8567647f5dbda80602c288ac6e"
    }, {
      "name" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                Expected: 0\n                Received: 0.123",
      "children" : [ {
        "name" : "As a User I get the right values for Pool investment P[5000000000000000000, 5000000000000000000] - I-> 0.123 -Expected - 0.123",
        "uid" : "79f152f98cd5f193",
        "parentUid" : "f29a8f680f20c50723d0b9cda7bc8a9a",
        "status" : "failed",
        "time" : {
          "start" : 1636996937400,
          "stop" : 1636997211505,
          "duration" : 274105
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "f29a8f680f20c50723d0b9cda7bc8a9a"
    }, {
      "name" : "Error: expect(received).toBe(expected) // Object.is equality\n                \n                Expected: 0\n                Received: 0.2",
      "children" : [ {
        "name" : "As a User I get the right values for Pool investment P[2500000000000000000, 5000000000000000000] - I-> 0.100 -Expected - 0.200",
        "uid" : "d14a82a47fe54eaf",
        "parentUid" : "ba03fa85ce9e9313b0f8fd45d36a48e7",
        "status" : "failed",
        "time" : {
          "start" : 1636997211505,
          "stop" : 1636997461043,
          "duration" : 249538
        },
        "flaky" : true,
        "newFailed" : false,
        "parameters" : [ ]
      } ],
      "uid" : "ba03fa85ce9e9313b0f8fd45d36a48e7"
    } ],
    "uid" : "8fb3a91ba5aaf9de24cc8a92edc82b5d"
  } ],
  "name" : "categories"
}